/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/assets/js/app.js":
/*!******************************!*\
  !*** ./src/assets/js/app.js ***!
  \******************************/
/***/ (function() {

"use strict";
eval("\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\r\n    /* Fixed Header */\r\n    let header = document.querySelector(\"#header\");\r\n    let intro = document.querySelector(\"#how\");\r\n\r\n    let introH = intro.getBoundingClientRect().top; //хуиня способ переделывать\r\n    let scrollPos = window.pageYOffset;\r\n    let siteWidth = window.innerWidth;\r\n\r\n    checkScroll(window, introH);\r\n\r\n    window.addEventListener(\"scroll\", function () {\r\n        // introH = intro.innerHeight(); \r\n        // introH = intro.getBoundingClientRect().top; //хуиня способ переделывать\r\n        introH = getInnerHeight(intro)\r\n        scrollPos = window.pageYOffset;\r\n\r\n        checkScroll(scrollPos, introH);\r\n        console.log(introH)\r\n    });\r\n\r\n    //замена метода innerHeight() из jq\r\n    function getInnerHeight(elm) {\r\n        let computed = getComputedStyle(elm),\r\n            padding = parseInt(computed.paddingTop) + parseInt(computed.paddingBottom);\r\n\r\n        return elm.clientHeight - padding\r\n    }\r\n\r\n\r\n    window.addEventListener(\"resize\", function () {\r\n        siteWidth = window.innerWidth;\r\n\r\n        console.log(siteWidth)\r\n        return siteWidth;\r\n    });\r\n\r\n    function checkScroll(scrollPos, introH) {\r\n        if (scrollPos > introH) {\r\n            if (siteWidth >= 1079) {\r\n                header.classList.add(\"fixed\");\r\n                header.classList.add(\"show\");\r\n            }\r\n        } else {\r\n            header.classList.remove(\"fixed\");\r\n            header.classList.remove(\"show\");\r\n        }\r\n    }\r\n\r\n    /* Smooth scroll */\r\n    document.querySelectorAll('[data-scroll]').forEach(item => {\r\n\r\n        item.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            let elementId = this.getAttribute('data-scroll').substring(1);\r\n\r\n            const scrollTarget = document.getElementById(elementId);\r\n\r\n            const topOffset = document.querySelector('.nav__list').offsetHeight;\r\n            const elementPosition = scrollTarget.getBoundingClientRect().top;\r\n            const offsetPosition = elementPosition - topOffset;\r\n\r\n            window.scrollBy({\r\n                top: offsetPosition - 80,\r\n                behavior: 'smooth'\r\n            }); //как установить опредленное время скрола как выше )\r\n\r\n        });\r\n    });\r\n\r\n\r\n    /* Filter\r\n    =====================*/\r\n    const filters = document.querySelectorAll(\"[data-filter]\");\r\n\r\n    Array.from(filters).forEach(filter => {\r\n        filter.addEventListener(\"click\", function (event) {\r\n            event.preventDefault();\r\n\r\n            const categoryName = filter.dataset[\"filter\"];\r\n            const categories = document.querySelectorAll(\"[data-cat]\");\r\n\r\n            const categories2 = document.querySelectorAll(\"[data-filter]\");\r\n\r\n            Array.from(categories).forEach(category => {\r\n\r\n                const workCat = category.dataset[\"cat\"];\r\n\r\n                if (workCat !== categoryName) {\r\n                    category.classList.remove(\"active\");\r\n                } else {\r\n                    category.classList.add(\"active\");\r\n                }\r\n            });\r\n\r\n            Array.from(categories2).forEach(category => {\r\n\r\n                const workCat = category.dataset[\"filter\"];\r\n\r\n                if (workCat !== categoryName) {\r\n                    category.classList.remove(\"active\");\r\n                } else {\r\n                    category.classList.add(\"active\");\r\n                }\r\n            });\r\n\r\n        });\r\n    });\r\n\r\n});\n\n//# sourceURL=webpack://brainscloud/./src/assets/js/app.js?");

/***/ }),

/***/ "./src/assets/js/form.js":
/*!*******************************!*\
  !*** ./src/assets/js/form.js ***!
  \*******************************/
/***/ (function() {

"use strict";
eval("\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  const form = document.getElementById(\"form\");\r\n  const formSending = document.querySelector(\".shipped__screen\");\r\n  const loadingScreen = document.querySelector(\".loading__screen\");\r\n  const formFileRight = document.querySelector(\".form__right\"); // мое\r\n\r\n  form.addEventListener(\"submit\", formSend); //при отправке формы мы должны переити к событию formSend\r\n  formSending.addEventListener(\"click\", closeSending);\r\n\r\n  function closeSending() {\r\n    formSending.classList.remove(\"_shipped\");\r\n  }\r\n\r\n  async function formSend(event) {\r\n    event.preventDefault();\r\n    let error = formValidate(form);\r\n    let formData = new FormData(form); //эта строка спомощью FormData получает все данные полей\r\n    formData.append(\"image\", formImage.files[0]); // а тут в FormData добавляем еще и изображение полченое при обработке внизу\r\n\r\n    // делаем проверку и если ошибка то выводим алерт\r\n    //  if (error === 0) { Для работы расскоментируем и удаляем строку ниже\r\n    if (error === 0) {\r\n      form.classList.add(\"_sending\"); //сообщаем пользователю что отправляется\r\n      loadingScreen.classList.add(\"_sending\");\r\n      toastShow(toastSending);\r\n      // делаем отправку спомощью технологии Аякс через фетч\r\n      //   let response = await fetch(\"sendmail.php\", { Для работы расскоментируем\r\n      //     method: \"POST\",\r\n      //     body: formData,\r\n      //   });\r\n      // if (response.ok) { Для работы расскоментируем и удаляем строку ниже\r\n      if (true) {\r\n        // let result = await response.json(); Для работы расскоментируем\r\n        // if (result.message == \"Данные отправлены!\") { Для работы расскоментируем и удаляем строку ниже\r\n        if (true) {\r\n          setTimeout(() => {\r\n            toastShow(toastShipped);\r\n            form.classList.remove(\"_sending\");\r\n            loadingScreen.classList.remove(\"_sending\");\r\n\r\n            titleText.innerHTML = `Перетащи сюда макет,<br> который нужно согласовать`;\r\n            buttonText.innerText = \"Загрузить\";\r\n            nameFile = \"\";\r\n            formImage.value = \"\";\r\n            formPreview.innerHTML = \"\";\r\n            form.reset();\r\n            formSending.classList.add(\"_shipped\");\r\n          }, 2700);\r\n        } else {}\r\n      } else {}\r\n    } else {\r\n      // toastShow(toastReq);\r\n    }\r\n  }\r\n\r\n  let formReq = document.querySelectorAll(\"._req\"); // req сокращение от обязательное\r\n  for (let index = 0; index < formReq.length; index++) {\r\n    const input = formReq[index];\r\n\r\n    input.addEventListener(\"focusout\", (event) => {\r\n      formVal(input);\r\n    });\r\n  }\r\n  function formVal(input) {\r\n    if (input.value === \"\") {\r\n    } else {\r\n      formRemoveError(input);\r\n    }\r\n  }\r\n\r\n  function formValidate(event) {\r\n    let error = 0;\r\n    let formReq = document.querySelectorAll(\"._req\"); // req сокращение от обязательное\r\n\r\n    for (let index = 0; index < formReq.length; index++) {\r\n      const input = formReq[index];\r\n      formRemoveError(input); // каждый раз когда проверям нам нужно изначально убрать клас error\r\n\r\n      if (input.classList.contains(\"_email\")) {\r\n        //Опять новый клас как req, добавляем в html\r\n        if (emailTest(input)) {\r\n          formAddError(input);\r\n          error++;\r\n        }\r\n      } else {\r\n        if (input.value === \"\") {\r\n          formAddError(input);\r\n          error++;\r\n        }\r\n      }\r\n    }\r\n    // Проверка на загруженый фаил (на начилие названия файла)\r\n    if (!!nameFile) {\r\n      formFileRemoveError(formFileRight);\r\n    } else {\r\n      formFileAddError(formFileRight);\r\n      toastShow(toastErrorNoFile);\r\n      error++;\r\n    }\r\n\r\n    return error; //возвращаем значение ошибки, оно будет либо 0 либо больше нуля\r\n  }\r\n\r\n  function formAddError(input) {\r\n    input.parentElement.classList.add(\"_error\"); //клас эрор можем использовать для стилизации\r\n    input.classList.add(\"_error\");\r\n  }\r\n\r\n  function formRemoveError(input) {\r\n    input.parentElement.classList.remove(\"_error\");\r\n    input.classList.remove(\"_error\");\r\n  }\r\n\r\n  //мое\r\n  function formFileAddError(fileItem) {\r\n    fileItem.classList.add(\"_error\");\r\n  }\r\n  //мое\r\n  function formFileRemoveError(formFileRight) {\r\n    formFileRight.classList.remove(\"_error\");\r\n  }\r\n\r\n  // Функция проверки почты\r\n  function emailTest(input) {\r\n    return !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,8})+$/.test(input.value);\r\n  }\r\n\r\n  //Получаем инпут fule в переменную\r\n  const formImage = document.getElementById(\"formImage\");\r\n  //Получаем див для превью в переменную\r\n  const formPreview = document.getElementById(\"formPreview\");\r\n\r\n  let nameFile;\r\n  formImage.addEventListener(\"change\", () => {\r\n    if (formImage.files.length == 0) {\r\n      return;\r\n    }\r\n    uploadFile(formImage.files[0]); //событие чендже, когда срабатывает мы отпр в функцию чеиндж фаил\r\n    // nameFile = formImage.files[0].name;\r\n\r\n    nameFile = trimFileName(formImage);\r\n    return nameFile;\r\n  });\r\n\r\n  function trimFileName(fileName) {\r\n    var text = fileName.files[0].name,\r\n      delimiter = text.lastIndexOf(\".\"), // fileName hold the whole name filename.ml4\r\n      extension = text.substr(delimiter), // the extension of the file\r\n      file = text.substr(0, delimiter); // just the name of the file\r\n\r\n    var filenameLen = 7; // adjust for the required filename length\r\n\r\n    return (\r\n      (file.length > filenameLen\r\n        ? file.substr(0, filenameLen) + \".../\"\r\n        : file) + extension\r\n    );\r\n  }\r\n\r\n  let buttonText = document.querySelector(\".file__button\");\r\n  let titleText = document.querySelector(\".file__text\");\r\n\r\n  function uploadFile(file) {\r\n    //проверяем есть ли фаил\r\n    if (!file) {\r\n      formImage.value = \"\";\r\n      return;\r\n    }\r\n    //проверяем тип фаила\r\n    if (false) {}\r\n\r\n    var reader = new FileReader();\r\n    reader.onload = function (event) {\r\n      //проверяем размер фаила\r\n      if (file.size > 20 * 1024 * 1024) {\r\n        // alert(\"Фаил должен быть мнее 10 МБ.\");\r\n        toastShow(toastErrorFile, 4485);\r\n        buttonText.innerText = \"Загрузить другой\";\r\n        titleText.innerHTML = `<img src=\"assets/images/form/error.svg\"></img>`;\r\n        formPreview.innerHTML = `${nameFile}`;\r\n        formFileAddError(formFileRight);\r\n        formImage.value = \"\";\r\n        nameFile = \"\";\r\n        return;\r\n      }\r\n\r\n      formPreview.innerHTML = `${nameFile}`;\r\n      buttonText.innerText = \"Загрузить другой\";\r\n      // formFile1.classList.add('_uploaded')\r\n      titleText.innerHTML = `<img src=\"assets/images/form/check.svg\"></img>`;\r\n      formFileRemoveError(formFileRight);\r\n    };\r\n\r\n    reader.onerror = function (event) {\r\n      alert(\"Ошибка\");\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  /*===================\r\n    Тосты | Ошибки формы \r\n    =====================*/\r\n\r\n  const toastReq = document.querySelector(\".toast--req\");\r\n  const toastErrorNoFile = document.querySelector(\".toast--error\");\r\n  const toastSending = document.querySelector(\".toast--sending\");\r\n  const toastShipped = document.querySelector(\".toast--shipped\");\r\n  const toastErrorSend = document.querySelector(\".toast--errorSend\");\r\n  const toastErrorFile = document.querySelector(\".toast--errorFile\");\r\n\r\n  function toastShow(toast, time = 2485) {\r\n    toast.classList.add(\"active\");\r\n\r\n    setTimeout(() => {\r\n      toast.classList.remove(\"active\");\r\n    }, time);\r\n  }\r\n});\r\n\n\n//# sourceURL=webpack://brainscloud/./src/assets/js/form.js?");

/***/ }),

/***/ "./src/assets/js/like.js":
/*!*******************************!*\
  !*** ./src/assets/js/like.js ***!
  \*******************************/
/***/ (function() {

eval("// Анимация лайка\r\n\r\n\r\n\r\n    const btnLike = document.querySelector('.btn__like');\r\n    const like1 = document.querySelector('.like1')\r\n\r\n    let mybtn_enabled1 = true;\r\n    btnLike.addEventListener('click', event => {\r\n\r\n        if (mybtn_enabled1) {\r\n            mybtn_enabled1 = false;\r\n\r\n            like1.classList.add(\"active\");\r\n\r\n            setTimeout(() => {\r\n                like1.classList.remove('active');\r\n                mybtn_enabled1 = true;\r\n            }, 700);\r\n        }\r\n        // if (!event.repeat)\r\n        // btn()\r\n    });\r\n\r\n    // function btn() {\r\n    //     like1.classList.add(\"active\");\r\n\r\n    //     setTimeout(() => {\r\n    //         like1.classList.remove('active');\r\n    //     }, 1000);\r\n    // }\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack://brainscloud/./src/assets/js/like.js?");

/***/ }),

/***/ "./src/assets/js/modal.js":
/*!********************************!*\
  !*** ./src/assets/js/modal.js ***!
  \********************************/
/***/ (function() {

"use strict";
eval("\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\r\n    const modalBtn = document.querySelectorAll('[data-modal]');\r\n    const body = document.body;\r\n    const modalClose = document.querySelectorAll('.modal__close');\r\n    const modal = document.querySelectorAll('.modal');\r\n    const html = document.documentElement\r\n\r\n    //const mobile = (/Android|webOS|iPhone|iPad|iPod|BlackBerry|BB|PlayBook|IEMobile|Windows Phone|Kindle|Silk|Opera Mini/i.test(navigator.userAgent))\r\n\r\n\r\n    //ширина скрола\r\n    const mainElement = document.documentElement;\r\n    const mainWidth = mainElement.clientWidth;\r\n    const windowWidth = window.innerWidth;\r\n\r\n    const scrollWidth = windowWidth - mainWidth;\r\n    console.log(scrollWidth);\r\n    //=========================\r\n\r\n\r\n    modalBtn.forEach(item => {\r\n        item.addEventListener('click', event => {\r\n            let $this = event.currentTarget;\r\n            let modalId = $this.getAttribute('data-modal');\r\n            let modal = document.getElementById(modalId);\r\n            let modalContent = modal.querySelector('.modal__content');\r\n\r\n            modalContent.addEventListener('click', event => {\r\n                event.stopPropagation();\r\n            });\r\n\r\n            modal.classList.add('show');\r\n            body.classList.add('no-scroll');\r\n            body.style.paddingRight = scrollWidth + \"px\";\r\n\r\n            toastPay.style.marginLeft = \"-\" + (scrollWidth / 2) + \"px\";\r\n\r\n            setTimeout(() => {\r\n                modalContent.style.transform = 'none';\r\n                modalContent.style.opacity = '1';\r\n            }, 1);\r\n\r\n        });\r\n    });\r\n\r\n\r\n    modalClose.forEach(item => {\r\n        item.addEventListener('click', event => {\r\n            let currentModal = event.currentTarget.closest('.modal');\r\n            closeModal(currentModal);\r\n        });\r\n    });\r\n\r\n\r\n    modal.forEach(item => {\r\n        item.addEventListener('click', event => {\r\n            let currentModal = event.currentTarget;\r\n            console.log(currentModal)\r\n            closeModal(currentModal);\r\n        });\r\n    });\r\n\r\n\r\n    function closeModal(currentModal) {\r\n        let modalContent = currentModal.querySelector('.modal__content');\r\n        modalContent.removeAttribute('style');\r\n\r\n        setTimeout(() => {\r\n            currentModal.classList.remove('show');\r\n            body.classList.remove('no-scroll');\r\n            body.style.paddingRight = \"\";\r\n\r\n            toastPay.style.marginLeft = \"0px\";\r\n        }, 200);\r\n    }\r\n\r\n\r\n    const toastPay = document.querySelector(\".toast--pay\");\r\n    const btnPay = document.querySelector(\".btn__gradient--pay\");\r\n\r\n    let mybtn_enabled = true;\r\n    btnPay.addEventListener('click', event => {\r\n\r\n        if (mybtn_enabled) {\r\n\r\n            let currentModal = document.querySelector('.modal');\r\n            closeModal(currentModal);\r\n\r\n            mybtn_enabled = false;\r\n            toastPay.classList.add(\"active\");\r\n\r\n\r\n\r\n            setTimeout(() => {\r\n                toastPay.classList.remove('active');\r\n                mybtn_enabled = true;\r\n            }, 3485);\r\n        }\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n});\n\n//# sourceURL=webpack://brainscloud/./src/assets/js/modal.js?");

/***/ }),

/***/ "./src/assets/js/pay.js":
/*!******************************!*\
  !*** ./src/assets/js/pay.js ***!
  \******************************/
/***/ (function() {

eval("// \"use strict\"\r\n// document.addEventListener('DOMContentLoaded', function () {\r\n\r\n//     const toastPay = document.querySelector(\".toast--pay\");\r\n//     const btnPay = document.querySelector(\".btn__gradient--pay\");\r\n\r\n//     let mybtn_enabled = true;\r\n//     btnPay.addEventListener('click', event => {\r\n\r\n//         if (mybtn_enabled) {\r\n//             mybtn_enabled = false;\r\n\r\n//             toastPay.classList.add(\"active\");\r\n\r\n//             setTimeout(() => {\r\n//                 toastPay.classList.remove('active');\r\n//                 mybtn_enabled = true;\r\n//             }, 3485);\r\n//         }\r\n//     });\r\n// })\n\n//# sourceURL=webpack://brainscloud/./src/assets/js/pay.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_modules__["./src/assets/js/app.js"]();
/******/ 	__webpack_modules__["./src/assets/js/form.js"]();
/******/ 	__webpack_modules__["./src/assets/js/like.js"]();
/******/ 	__webpack_modules__["./src/assets/js/modal.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/assets/js/pay.js"]();
/******/ 	
/******/ })()
;